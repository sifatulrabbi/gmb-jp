:root {
  --typewriterDuration: 0.8s;
  --typewriterSteps: 6;
  --typewriterDelay: 0.5s;
  --blinkDelay: 0s;
  --blinkDuration: 800ms;
}

.hero-text1,
.hero-text2 {
  width: max-content;
  position: relative;
  display: block;
}

.hero-text-container {
  width: max-content;
  transform: translateY(1rem);
  opacity: 0;
  animation: slideUp 0.5s ease var(--typewriterDelay) forwards;
}

.hero-text2 {
  --typewriterSteps: 4;
  --typewriterDelay: 1.3s;
  --blinkDelay: 2s;
}

.hero-text1::before,
.hero-text2::before,
.hero-text1::after,
.hero-text2::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.hero-text1::before,
.hero-text2::before {
  background-color: #fff;
  animation: typewriter var(--typewriterDuration) steps(6, end)
    var(--typewriterDelay) forwards;
}

.hero-text1::after,
.hero-text2::after {
  background-color: #000;
  width: 0.1em;
  opacity: 1;
}

.hero-text2::after {
  animation: typewriter var(--typewriterDuration) steps(6, end)
      var(--typewriterDelay) forwards,
    blink var(--blinkDuration) ease-in var(--blinkDelay) infinite,
    blinkStart 2s forwards;
}

.hero-text1::after {
  animation: typewriter var(--typewriterDuration) steps(6, end)
      var(--typewriterDelay) forwards,
    blink var(--blinkDuration) ease-in var(--blinkDelay) infinite,
    blinkEnd calc(var(--typewriterDuration) + var(--typewriterDelay)) forwards;
}

@keyframes typewriter {
  to {
    left: 100%;
  }
}

@keyframes blink {
  to {
    opacity: 0;
  }
}

@keyframes blinkEnd {
  0% {
    background-color: black;
  }
  99% {
    background-color: black;
  }
  100% {
    background-color: white;
  }
}

@keyframes blinkStart {
  0% {
    background-color: white;
  }
  99% {
    background-color: white;
  }
  100% {
    background-color: black;
  }
}

@keyframes slideUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.hero-container {
  width: 100%;
  display: grid;
  grid-template-areas:
    "left middle"
    "left middle"
    "bottom bottom";
  grid-template-columns: 0.4fr 1fr;
  grid-template-rows: 1fr 1fr auto;
}

.hero-bottom {
  grid-area: bottom;
}

.hero-middle {
  grid-area: middle;
  @apply grid grid-cols-1 grid-rows-2 max-h-[80vh] items-center justify-center md:flex md:flex-row;
}

.hero-left {
  grid-area: left;
  max-height: 100vh;
  @apply flex justify-start items-start;
}

.hero-img {
  width: clamp(150px, 50vw, 250px);
}

@media screen and (min-width: 768px) {
  .hero-container {
    height: 100vh;
    grid-template-areas:
      "left middle middle"
      "left bottom bottom";
    grid-template-columns: 0.4fr 1fr 1fr;
    grid-template-rows: 1fr auto;
  }
}
